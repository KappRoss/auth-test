{"version":3,"sources":["components/authPage/authPage.module.css","store/actions/actionsType.js","UserStateFile/users.js","components/authPage/AuthPage.js","store/actions/auth.js","components/infoPage/InfoPage.js","components/adminPage/AdminPage.js","App.js","reportWebVitals.js","store/reducer/authReducer.js","store/rootReducer.js","index.js"],"names":["module","exports","AUTH_LOG_IN","AUTH_SIGN_UP","ADMIN_AUTH","AUTH_ERROR","LOG_OUT","Math","random","connect","state","isAuth","auth","adminLogin","adminPassword","isAdmin","error","success","login","password","isLogin","dispatch","getState","type","users","filter","user","userName","userPass","length","signUp","logOut","useState","setLogin","setPassword","className","s","AuthPage","onClick","onSubmit","event","preventDefault","htmlFor","id","value","onChange","e","target","style","color","InfoPage","props","AdminPage","to","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","token","rootReducer","combineReducers","actions","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","logger","createLogger","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.63384657.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthPage\":\"authPage_AuthPage__2WZrl\"};","export const AUTH_LOG_IN = 'AUTH_LOG_IN'\nexport const AUTH_SIGN_UP = 'AUTH_SIGN_UP'\nexport const ADMIN_AUTH = 'ADMIN_AUTH'\nexport const AUTH_ERROR = 'AUTH_ERROR'\nexport const LOG_OUT = 'LOG_OUT'","\nexport const users = [\n    {\n        login: 'admin',\n        password: 'admin',\n        token: Math.random()\n    },\n    {\n        login: 'test@gmail.com',\n        password: '1234',\n        token: Math.random()\n    }\n]\n\n","import React, {useState} from 'react'\nimport s from './authPage.module.css'\nimport {connect} from \"react-redux\";\nimport {auth, logOut} from \"../../store/actions/auth\";\n\nconst AuthPage = ({adminLogin, adminPassword, auth, isAuth, isAdmin, error, success, logOut}) => {\n\n    const [login, setLogin] = useState('')\n    const [password, setPassword] = useState('')\n\n    const loginHandler = () => {\n        if (login === adminLogin && password === adminPassword) {\n            auth(login, password, true, true)\n        } else {\n            auth(login, password, true, false)\n        }\n    }\n\n    return (\n        <div className={s.AuthPage}>\n            {\n                isAuth\n                    ? <div>\n                        You are log in as {\n                        isAdmin\n                            ? <span>'ADMIN'</span>\n                            : <span>'USER'</span>\n                    }\n                        <button onClick={logOut}>Log out</button>\n                    </div>\n                    : <div>\n                        <h1>Auth Page</h1>\n                        <form onSubmit={event => event.preventDefault()}>\n                            <div>\n                                <label htmlFor=\"login\">Your Email/Nick</label>\n                                <input\n                                    type=\"text\"\n                                    id={'login'}\n                                    value={login}\n                                    onChange={e => setLogin(e.target.value)}\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"password\">Your password</label>\n                                <input\n                                    type=\"password\"\n                                    id={'password'}\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                                {\n                                    error ? <span style={{color: 'red'}}>Wrong pass or login</span> : null\n                                }\n                            </div>\n                        </form>\n                        <button onClick={loginHandler}>Log in</button>\n                        <button onClick={() => auth(login, password, false, false)}>Sign up</button>\n                        {\n                            success ? <span>Sign up success! Now log in!</span> : null\n                        }\n                    </div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.isAuth,\n        adminLogin: state.auth.adminLogin,\n        adminPassword: state.auth.adminPassword,\n        isAdmin: state.auth.isAdmin,\n        error: state.auth.error,\n        success: state.auth.success\n    }\n}\n\nexport default connect(mapStateToProps, {auth, logOut})(AuthPage)\n\n","import {ADMIN_AUTH, AUTH_ERROR, AUTH_LOG_IN, AUTH_SIGN_UP, LOG_OUT} from \"./actionsType\";\nimport {users} from \"../../UserStateFile/users\";\n\nconst logIn = () => ({type: AUTH_LOG_IN})\n\nconst signUp = (login, password) => (\n    {\n        type: AUTH_SIGN_UP,\n        login,\n        password\n    }\n)\n\nconst adminAuth = () => (\n    {\n        type: ADMIN_AUTH\n    }\n)\n\nconst error = () => ({type: AUTH_ERROR})\n\nconst setLogOut = () => ({type: LOG_OUT})\n\nexport const auth = (login, password, isLogin, isAdmin) => {\n    return (dispatch, getState) => {\n\n\n\n        let response = users\n\n\n\n        //////////admin/////////////\n        if (isAdmin && isLogin) {\n            dispatch(adminAuth())\n        }\n\n        ///////log in//////////////\n        if (isLogin) {\n            const state = getState()\n\n            let answer = state.auth.users.filter(user =>  user.userName === login && user.userPass === password)\n            answer.length === 1 ? dispatch(logIn()) : dispatch(error())\n\n        } else {\n            //////////sign in /////////\n            dispatch(signUp(login, password))\n        }\n    }\n}\n\nexport const logOut = () => {\n    return dispatch => {\n        dispatch(setLogOut())\n    }\n}","import React from 'react'\n\nconst InfoPage = props => {\n    return(\n        <div>\n            <h1>InfoPage</h1>\n        </div>\n    )\n}\n\nexport default InfoPage","import React from 'react'\n\nconst AdminPage = props => {\n    return(\n        <div>\n            <h1>AdminPage</h1>\n        </div>\n    )\n}\n\nexport default AdminPage","import './App.css';\nimport React from 'react'\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport AuthPage from \"./components/authPage/AuthPage\";\nimport InfoPage from \"./components/infoPage/InfoPage\";\nimport AdminPage from \"./components/adminPage/AdminPage\";\nimport {connect} from \"react-redux\";\n\nconst App = ({isAdmin}) => {\n    return (\n        <div className=\"App\">\n            <div className=\"navMenu\">\n                <div>\n                    <NavLink to={'/'}>Auth </NavLink>\n                </div>\n                <div>\n                    <NavLink to={'/info-page'}>Info page</NavLink>\n                </div>\n                <div>\n                    {isAdmin\n                        ? <NavLink to={'/admin-page'}>Admin page</NavLink>\n                        : null\n                    }\n                </div>\n            </div>\n            <Switch>\n                <Route exact path={'/info-page'} component={InfoPage}/>\n                <Route exact path={'/admin-page'} component={AdminPage}/>\n                <Route exact path={'/'} component={AuthPage}/>\n            </Switch>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAdmin: state.auth.isAdmin\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADMIN_AUTH, AUTH_ERROR, AUTH_LOG_IN, AUTH_SIGN_UP, LOG_OUT} from \"../actions/actionsType\";\n\nconst initialState = {\n    isAuth: false,\n    token: null,\n    users: [\n        {\n            userName: 'k@mail.ru',\n            userPass: '1234'\n        },\n        {\n            userName: 'test@mail.ua',\n            userPass: '1234'\n        }\n    ],\n\n    adminLogin: 'admin',\n    adminPassword: 'admin',\n    isAdmin: false,\n    error: false,\n    success: false\n}\n\nexport default function authReducer(state = initialState, actions) {\n    switch (actions.type) {\n        case ADMIN_AUTH :\n            return {\n                ...state,\n                isAdmin: true,\n                isAuth: true\n            }\n        case AUTH_LOG_IN:\n            return {\n                ...state,\n                isAuth: true,\n                error: false\n            }\n        case AUTH_SIGN_UP:\n            return {\n                ...state,\n                users: [...state.users, {\n                    userName: actions.login,\n                    userPass: actions.password\n                }],\n                success: true\n            }\n        case AUTH_ERROR:\n            return {\n                ...state,\n                error: true\n            }\n        case LOG_OUT:\n            return {\n                ...state,\n                isAuth: false,\n                success: false,\n                isAdmin: false\n            }\n        default:\n            return state\n    }\n}\n\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\nimport authReducer from \"./reducer/authReducer\";\nimport {createLogger} from \"redux-logger/src\";\nimport thunk from \"redux-thunk\";\nimport storage from 'redux-persist/lib/storage'\nimport {persistReducer, persistStore} from \"redux-persist\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer\n})\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    whitelist: ['auth']\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst logger = createLogger()\n\nexport let store = createStore(persistedReducer,\n    compose(applyMiddleware(logger, thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\n\nexport let persistor = persistStore(store)\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from \"react-redux\"\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {persistor, store} from \"./store/rootReducer\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate persistor={persistor} loading={null}>\n                <Router>\n                    <App/>\n                </Router>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}